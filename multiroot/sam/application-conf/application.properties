# Build properties used by zAppBuild/build.groovy

#
# Comma separated list of additional application property files to load
# Supports both relative path (to ${application}/application-conf/) and absolute path
applicationPropFiles=file.properties,Cobol.properties

#
# Comma separated list all source directories included in application build. Supports both absolute
# and relative paths.  Relative assumed to be relative to ${workspace}.
# ex: applicationSrcDirs=${application},/u/build/common/copybooks
applicationSrcDirs=${application}

#
# Comma separated list of the build script processing order
buildOrder=Cobol.groovy

#
# The main build branch.  Used for cloning collections for topic branch builds instead
# of rescanning the entire application.
mainBuildBranch=wazi-main

#
# exclude list used when scanning or running full build
excludeFileList=.*,**/*.properties,**/*.xml,**/*.groovy,**/*.md,**/application-conf/*.*

###############################################################
# Dependency Analysis and Impact Analysis configuration
###############################################################
#
# flag to define which DBB API is used for dependency and impact analysis
#
#  false = uses the DependencyResolver and ImpactResolver APIs (default)
#          please note that DependencyResolver and ImpactResolver APIs are deprecated
#          configuration is based on the lang_resolutionRules and impactResolutionRules build properties
#
#  true  = leverages the DBB SearchPathDependencyResolver and SearchParthImpactFinder APIs introduced with DBB 1.1.2
#          configuration is based on the lang_dependencySearch and impactSearch build properties
#          When using DBB 2.0, only the SearchPathDependencyResolver and SearchParthImpactFinder APIs are available,
#          and you have to set it to true
#
useSearchConfiguration=true

#
# boolean flag to configure the SearchPathDependencyResolver to evaluate if resolved dependencies impact
#  the file flags isCICS, isSQL, isDLI, isMQ when creating the LogicalFile
#
#  requires to use new APIs via useSearchConfiguration=true
#  default:false
resolveSubsystems=false

#
# Impact analysis resolution rules (JSON format).
# Defaults to just looking for local application dependency folders
# ** deprecated ** - see zAppBuild build property >impactSearch<
impactResolutionRules=[${copybookRule}]

#
# Impact finder resolution search configuration
#  leverages the SearchPathImpactFinder API
impactSearch=${copybookSearch}

# Rule to locate Cobol copy books. This rule defaults to the local copybook folder
# in the main application folder.
# used in dependency resolution and impact analysis
# ** deprecated **
copybookRule = {"library": "SYSLIB", \
                  "searchPath": [ \
                    {"sourceDir": "${workspace}", "directory": "${application}/cust"}, \
                    {"sourceDir": "${workspace}", "directory": "${application}/trans"}, \
                 ] \
               }

#
# copybookSearch
# searchPath to locate Cobol copybooks
# used in dependency resolution and impact analysis
copybookSearch = search:${workspace}/?path=${application}/cust/*.cpy;${application}/trans/*.cpy
